# this will pickup the latest value of the parameter every time the template is run
# the parameter value must be the Key for that Parameter. Then CFN will retrieve the value
# this does not support SecureString SSM Parameter types
Parameters:
  InstanceType:
    Type: 'String'
    Default: t2.micro

  ImageId: 
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /GoldenAMI/Linux/Amazon/latest

  SSHKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

Resources:
  # this instance will be automatically updated 
  # when we change the parameter in SSM ourselves
  # and then run the CloudFormation template
  MyInstanceWithParameters:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref SSHKey
      Tags: 
        - Key: Environment
          Value: 'Development'
        - Key: 'Department'
          Value: 'Devops Team'
      SecurityGroups:
        - !Ref ServerSecurityGroup

      IamInstanceProfile: !Ref InstanceProfile

   # our second EC2 security group
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
   # DeletionPolicy: Retain
    Properties:
      GroupDescription: "Security Group For This CF stack"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  EC2ConnectS3Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: s3_access_policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EC2ConnectS3Role